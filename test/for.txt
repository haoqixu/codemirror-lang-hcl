# for expr

for1 = { for i, v in ["a", "a", "b"] : v => i... }
for2 = [ for k, v in x : "${k}-${v}" ]
for3 = { for k, v in x: k => v if k > 100 }
for4 = [ for v in x : v ]
for5 = { for v in x : v => v }
for6 = [ for v in x : v if v < 3 ]

==>

ConfigFile(Body(
Attribute(
  Identifier
  Expression(
    ForExpr(
      ForObjectExpr(
        ForIntro(
          for
          Identifier
          Identifier
          in
          Expression(
            CollectionValue(Tuple(
                Expression(LiteralValue(StringLit(QuotedTemplateStart,TemplateLiteral,QuotedTemplateEnd)))
                Expression(LiteralValue(StringLit(QuotedTemplateStart,TemplateLiteral,QuotedTemplateEnd)))
                Expression(LiteralValue(StringLit(QuotedTemplateStart,TemplateLiteral,QuotedTemplateEnd)))
              )
            )
          )
        )
        Expression(VariableExpr(Identifier))
        Expression(VariableExpr(Identifier))
        Ellipsis
      )
    )
  )
),
Attribute(
  Identifier
  Expression(
    ForExpr(
      ForTupleExpr(
        ForIntro(
          for
          Identifier
          Identifier
          in
          Expression(VariableExpr(Identifier))
        )
        Expression(
          TemplateExpr(
            QuotedTemplate(
              QuotedTemplateStart
              TemplateInterpolation(
                TemplateInterpolationStart
                Expression(VariableExpr(Identifier))
                TemplateInterpolationEnd
              )
              TemplateLiteral
              TemplateInterpolation(
                TemplateInterpolationStart
                Expression(VariableExpr(Identifier))
                TemplateInterpolationEnd
              )
              QuotedTemplateEnd)))))))
Attribute(
  Identifier
  Expression (
    ForExpr (
      ForObjectExpr (
        ForIntro (
          for
          Identifier
          Identifier
          in
          Expression (
            VariableExpr (
                Identifier
            )
          )
        )
        Expression (
          VariableExpr (
            Identifier
          )
        )
        Expression (
          VariableExpr (
            Identifier
          )
        )
        ForCond (
          if
          Expression (
            Operation (
              BinaryOperation (
                VariableExpr (
                  Identifier
                )
                CompareOp
                LiteralValue (
                    NumericLit
                )
              )
            )
          )
        )
      )
    )
  )
),
Attribute(
  Identifier
  Expression (
    ForExpr (
      ForTupleExpr (
        ForIntro (
          for
          Identifier
          in
          Expression (
            VariableExpr (
                Identifier
            )
          )
        )
        Expression (
          VariableExpr (
            Identifier
          )
        )
      )
    )
  )
),
Attribute(
  Identifier
  Expression (
    ForExpr (
      ForObjectExpr (
        ForIntro (
          for
          Identifier
          in
          Expression (
            VariableExpr (
                Identifier
            )
          )
        )
        Expression (
          VariableExpr (
            Identifier
          )
        )
        Expression (
          VariableExpr (
            Identifier
          )
        )
      )
    )
  )
),

Attribute(
  Identifier
  Expression (
    ForExpr (
      ForTupleExpr (
        ForIntro (
          for
          Identifier
          in
          Expression(VariableExpr(Identifier))
        )
        Expression(VariableExpr(Identifier))
        ForCond (
          if
          Expression (
            Operation (
              BinaryOperation (
                VariableExpr (
                  Identifier
                )
                CompareOp
                LiteralValue (
                    NumericLit
                )
              )
            )
          )
        )
      )
    )
  )
),
))
